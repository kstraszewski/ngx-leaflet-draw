/*! @asymmetrik/ngx-leaflet-draw - 2.6.0 - Copyright Asymmetrik, Ltd. 2007-2017 - All Rights Reserved. + */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@asymmetrik/ngx-leaflet"),require("leaflet"),require("leaflet-draw")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@asymmetrik/ngx-leaflet","leaflet","leaflet-draw"],e):e(t.ngxLeafletDraw={},t.ng.core,t.ngxLeaflet,t.L)}(this,function(t,e,r,n){"use strict";var i=/** @class */function(){function t(t){this.drawOptions=null,this.onCreate=new e.EventEmitter,this.onDrawStart=new e.EventEmitter,this.onDrawStop=new e.EventEmitter,this.onDeleted=new e.EventEmitter,this.onDeleteStart=new e.EventEmitter,this.onDeleteStop=new e.EventEmitter,this.onEdited=new e.EventEmitter,this.onEditStart=new e.EventEmitter,this.onEditStop=new e.EventEmitter,this.leafletDirective=new r.LeafletDirectiveWrapper(t)}/** @nocollapse */
return t.prototype.ngOnInit=function(){var t=this;this.leafletDirective.init(),
// Initialize the draw options (in case they weren't provided)
this.drawOptions=this.initializeDrawOptions(this.drawOptions),
// Create the control
this.drawControl=new n.Control.Draw(this.drawOptions),
// Pull out the feature group for convenience
this.featureGroup=this.drawOptions.edit.featureGroup,
// Add the control to the map
this.leafletDirective.getMap().addControl(this.drawControl),
// Register the main handler for events coming from the draw plugin
/*Create*/
0===this.onCreate.observers.length?this.leafletDirective.getMap().on(n.Draw.Event.CREATED,function(e){var r=e.layer;t.featureGroup.addLayer(r)}):this.leafletDirective.getMap().on(n.Draw.Event.CREATED,function(e){t.onCreate.emit(e)}),0!==this.onDrawStart.observers.length&&this.leafletDirective.getMap().on(n.Draw.Event.DRAWSTART,function(e){t.onDrawStart.emit(e)}),0!==this.onDrawStop.observers.length&&this.leafletDirective.getMap().on(n.Draw.Event.DRAWSTOP,function(e){t.onDrawStop.emit(e)}),/*Edit*/
0!==this.onEdited.observers.length&&this.leafletDirective.getMap().on(n.Draw.Event.EDITED,function(e){t.onEdited.emit(e)}),0!==this.onEditStart.observers.length&&this.leafletDirective.getMap().on(n.Draw.Event.EDITSTART,function(e){t.onEditStart.emit(e)}),0!==this.onEditStop.observers.length&&this.leafletDirective.getMap().on(n.Draw.Event.EDITSTOP,function(e){t.onEditStop.emit(e)}),/*Delete*/
0!==this.onDeleted.observers.length&&this.leafletDirective.getMap().on(n.Draw.Event.DELETED,function(e){t.onDeleted.emit(e)}),0!==this.onDeleteStart.observers.length&&this.leafletDirective.getMap().on(n.Draw.Event.DELETESTART,function(e){t.onDeleteStart.emit(e)}),0!==this.onDeleteStop.observers.length&&this.leafletDirective.getMap().on(n.Draw.Event.DELETESTOP,function(e){t.onDeleteStop.emit(e)})},t.prototype.ngOnDestroy=function(){this.leafletDirective.getMap().removeControl(this.drawControl)},t.prototype.ngOnChanges=function(t){},t.prototype.initializeDrawOptions=function(t){
// Ensure the options have a featureGroup
// No feature group was provided, so we're going to add it ourselves
return null==t&&(t={edit:null}),null==t.edit&&(t.edit={featureGroup:null}),null==t.edit.featureGroup&&(t.edit.featureGroup=n.featureGroup(),this.leafletDirective.getMap().addLayer(t.edit.featureGroup)),t},t.decorators=[{type:e.Directive,args:[{selector:"[leafletDraw]"}]}],t.ctorParameters=function(){return[{type:r.LeafletDirective}]},t.propDecorators={drawOptions:[{type:e.Input,args:["leafletDrawOptions"]}],onCreate:[{type:e.Output}],onDrawStart:[{type:e.Output}],onDrawStop:[{type:e.Output}],onDeleted:[{type:e.Output}],onDeleteStart:[{type:e.Output}],onDeleteStop:[{type:e.Output}],onEdited:[{type:e.Output}],onEditStart:[{type:e.Output}],onEditStop:[{type:e.Output}]},t}(),o=/** @class */function(){function t(){}/** @nocollapse */
return t.forRoot=function(){return{ngModule:t,providers:[]}},t.decorators=[{type:e.NgModule,args:[{imports:[r.LeafletModule],exports:[i],declarations:[i]}]}],t.ctorParameters=function(){return[]},t}();t.LeafletDrawModule=o,t.LeafletDrawDirective=i,Object.defineProperty(t,"__esModule",{value:!0})});